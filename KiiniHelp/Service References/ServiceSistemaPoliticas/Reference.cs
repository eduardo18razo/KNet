//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KiiniHelp.ServiceSistemaPoliticas {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSistemaPoliticas.IServicePoliticas")]
    public interface IServicePoliticas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePoliticas/GeneraEstatusAsignacionGrupoDefault", ReplyAction="http://tempuri.org/IServicePoliticas/GeneraEstatusAsignacionGrupoDefaultResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Parametros.EstatusAsignacionSubRolGeneralDefault> GeneraEstatusAsignacionGrupoDefault();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePoliticas/HabilitarPoliticaAsignacion", ReplyAction="http://tempuri.org/IServicePoliticas/HabilitarPoliticaAsignacionResponse")]
        void HabilitarPoliticaAsignacion(int idArea, bool habilitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePoliticas/GeneraEstatusTicketSubRolGeneralDefault", ReplyAction="http://tempuri.org/IServicePoliticas/GeneraEstatusTicketSubRolGeneralDefaultRespo" +
            "nse")]
        System.Collections.Generic.List<KiiniNet.Entities.Parametros.EstatusTicketSubRolGeneralDefault> GeneraEstatusTicketSubRolGeneralDefault();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePoliticas/HabilitarPoliticaEstatus", ReplyAction="http://tempuri.org/IServicePoliticas/HabilitarPoliticaEstatusResponse")]
        void HabilitarPoliticaEstatus(int idArea, bool habilitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePoliticas/GeneraSubRolEscalacionPermitida", ReplyAction="http://tempuri.org/IServicePoliticas/GeneraSubRolEscalacionPermitidaResponse")]
        System.Collections.Generic.List<KiiniNet.Entities.Parametros.SubRolEscalacionPermitida> GeneraSubRolEscalacionPermitida();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePoliticas/HabilitarPoliticaEscalacion", ReplyAction="http://tempuri.org/IServicePoliticas/HabilitarPoliticaEscalacionResponse")]
        void HabilitarPoliticaEscalacion(int idEscalacion, bool habilitado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePoliticasChannel : KiiniHelp.ServiceSistemaPoliticas.IServicePoliticas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePoliticasClient : System.ServiceModel.ClientBase<KiiniHelp.ServiceSistemaPoliticas.IServicePoliticas>, KiiniHelp.ServiceSistemaPoliticas.IServicePoliticas {
        
        public ServicePoliticasClient() {
        }
        
        public ServicePoliticasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePoliticasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePoliticasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePoliticasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Parametros.EstatusAsignacionSubRolGeneralDefault> GeneraEstatusAsignacionGrupoDefault() {
            return base.Channel.GeneraEstatusAsignacionGrupoDefault();
        }
        
        public void HabilitarPoliticaAsignacion(int idArea, bool habilitado) {
            base.Channel.HabilitarPoliticaAsignacion(idArea, habilitado);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Parametros.EstatusTicketSubRolGeneralDefault> GeneraEstatusTicketSubRolGeneralDefault() {
            return base.Channel.GeneraEstatusTicketSubRolGeneralDefault();
        }
        
        public void HabilitarPoliticaEstatus(int idArea, bool habilitado) {
            base.Channel.HabilitarPoliticaEstatus(idArea, habilitado);
        }
        
        public System.Collections.Generic.List<KiiniNet.Entities.Parametros.SubRolEscalacionPermitida> GeneraSubRolEscalacionPermitida() {
            return base.Channel.GeneraSubRolEscalacionPermitida();
        }
        
        public void HabilitarPoliticaEscalacion(int idEscalacion, bool habilitado) {
            base.Channel.HabilitarPoliticaEscalacion(idEscalacion, habilitado);
        }
    }
}

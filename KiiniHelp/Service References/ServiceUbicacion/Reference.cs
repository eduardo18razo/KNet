//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Diagnostics;
using System.ServiceModel;
using System.ServiceModel.Channels;
using KiiniNet.Entities.Cat.Arbol.Ubicaciones;
using KiiniNet.Entities.Cat.Operacion;

namespace KiiniHelp.ServiceUbicacion {
    
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="ServiceUbicacion.IServiceUbicacion")]
    public interface IServiceUbicacion {
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerPais", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerPaisResponse")]
        List<Pais> ObtenerPais(int idTipoUsuario, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerCampus", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerCampusResponse")]
        List<Campus> ObtenerCampus(int idTipoUsuario, int idPais, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerTorres", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerTorresResponse")]
        List<Torre> ObtenerTorres(int idTipoUsuario, int idCampus, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerPisos", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerPisosResponse")]
        List<Piso> ObtenerPisos(int idTipoUsuario, int idTorre, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerZonas", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerZonasResponse")]
        List<Zona> ObtenerZonas(int idTipoUsuario, int idPiso, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerSubZonas", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerSubZonasResponse")]
        List<SubZona> ObtenerSubZonas(int idTipoUsuario, int idZona, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerSiteRacks", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerSiteRacksResponse")]
        List<SiteRack> ObtenerSiteRacks(int idTipoUsuario, int idSubZona, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/ObtenerUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/ObtenerUbicacionResponse")]
        Ubicacion ObtenerUbicacion(int idPais, Nullable<int> idCampus, Nullable<int> idTorre, Nullable<int> idPiso, Nullable<int> idZona, Nullable<int> idSubZona, Nullable<int> idSiteRack);
        
        [OperationContract(Action="http://tempuri.org/IServiceUbicacion/GuardarUbicacion", ReplyAction="http://tempuri.org/IServiceUbicacion/GuardarUbicacionResponse")]
        void GuardarUbicacion(Ubicacion ubicacion);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUbicacionChannel : IServiceUbicacion, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUbicacionClient : ClientBase<IServiceUbicacion>, IServiceUbicacion {
        
        public ServiceUbicacionClient() {
        }
        
        public ServiceUbicacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUbicacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUbicacionClient(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUbicacionClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public List<Pais> ObtenerPais(int idTipoUsuario, bool insertarSeleccion) {
            return base.Channel.ObtenerPais(idTipoUsuario, insertarSeleccion);
        }
        
        public List<Campus> ObtenerCampus(int idTipoUsuario, int idPais, bool insertarSeleccion) {
            return base.Channel.ObtenerCampus(idTipoUsuario, idPais, insertarSeleccion);
        }
        
        public List<Torre> ObtenerTorres(int idTipoUsuario, int idCampus, bool insertarSeleccion) {
            return base.Channel.ObtenerTorres(idTipoUsuario, idCampus, insertarSeleccion);
        }
        
        public List<Piso> ObtenerPisos(int idTipoUsuario, int idTorre, bool insertarSeleccion) {
            return base.Channel.ObtenerPisos(idTipoUsuario, idTorre, insertarSeleccion);
        }
        
        public List<Zona> ObtenerZonas(int idTipoUsuario, int idPiso, bool insertarSeleccion) {
            return base.Channel.ObtenerZonas(idTipoUsuario, idPiso, insertarSeleccion);
        }
        
        public List<SubZona> ObtenerSubZonas(int idTipoUsuario, int idZona, bool insertarSeleccion) {
            return base.Channel.ObtenerSubZonas(idTipoUsuario, idZona, insertarSeleccion);
        }
        
        public List<SiteRack> ObtenerSiteRacks(int idTipoUsuario, int idSubZona, bool insertarSeleccion) {
            return base.Channel.ObtenerSiteRacks(idTipoUsuario, idSubZona, insertarSeleccion);
        }
        
        public Ubicacion ObtenerUbicacion(int idPais, Nullable<int> idCampus, Nullable<int> idTorre, Nullable<int> idPiso, Nullable<int> idZona, Nullable<int> idSubZona, Nullable<int> idSiteRack) {
            return base.Channel.ObtenerUbicacion(idPais, idCampus, idTorre, idPiso, idZona, idSubZona, idSiteRack);
        }
        
        public void GuardarUbicacion(Ubicacion ubicacion) {
            base.Channel.GuardarUbicacion(ubicacion);
        }
    }
}

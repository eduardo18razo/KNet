//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Diagnostics;
using System.ServiceModel;
using System.ServiceModel.Channels;
using KiiniNet.Entities.Cat.Arbol.Organizacion;
using KiiniNet.Entities.Cat.Operacion;

namespace KiiniHelp.ServiceOrganizacion {
    
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="ServiceOrganizacion.IServiceOrganizacion")]
    public interface IServiceOrganizacion {
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerHoldings", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerHoldingsResponse")]
        List<Holding> ObtenerHoldings(int idTipoUsuario, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerCompañias", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerCompañiasResponse")]
        List<Compania> ObtenerCompañias(int idTipoUsuario, int idHolding, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerDirecciones", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerDireccionesResponse")]
        List<Direccion> ObtenerDirecciones(int idTipoUsuario, int idCompañia, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerSubDirecciones", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerSubDireccionesResponse")]
        List<SubDireccion> ObtenerSubDirecciones(int idTipoUsuario, int idDireccoin, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerGerencias", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerGerenciasResponse")]
        List<Gerencia> ObtenerGerencias(int idTipoUsuario, int idSubdireccion, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerSubGerencias", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerSubGerenciasResponse")]
        List<SubGerencia> ObtenerSubGerencias(int idTipoUsuario, int idGerencia, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerJefaturas", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerJefaturasResponse")]
        List<Jefatura> ObtenerJefaturas(int idTipoUsuario, int idSubGerencia, bool insertarSeleccion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/ObtenerOrganizacion", ReplyAction="http://tempuri.org/IServiceOrganizacion/ObtenerOrganizacionResponse")]
        Organizacion ObtenerOrganizacion(int idHolding, Nullable<int> idCompania, Nullable<int> idDireccion, Nullable<int> idSubDireccion, Nullable<int> idGerencia, Nullable<int> idSubGerencia, Nullable<int> idJefatura);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarOrganizacion", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarOrganizacionResponse")]
        void GuardarOrganizacion(Organizacion organizacion);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarHolding", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarHoldingResponse")]
        void GuardarHolding(Holding entidad);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarCompania", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarCompaniaResponse")]
        void GuardarCompania(Compania entidad);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarDireccion", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarDireccionResponse")]
        void GuardarDireccion(Direccion entidad);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarSubDireccion", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarSubDireccionResponse")]
        void GuardarSubDireccion(SubDireccion entidad);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarGerencia", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarGerenciaResponse")]
        void GuardarGerencia(Gerencia entidad);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarSubGerencia", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarSubGerenciaResponse")]
        void GuardarSubGerencia(SubGerencia entidad);
        
        [OperationContract(Action="http://tempuri.org/IServiceOrganizacion/GuardarJefatura", ReplyAction="http://tempuri.org/IServiceOrganizacion/GuardarJefaturaResponse")]
        void GuardarJefatura(Jefatura entidad);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOrganizacionChannel : IServiceOrganizacion, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOrganizacionClient : ClientBase<IServiceOrganizacion>, IServiceOrganizacion {
        
        public ServiceOrganizacionClient() {
        }
        
        public ServiceOrganizacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceOrganizacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrganizacionClient(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrganizacionClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public List<Holding> ObtenerHoldings(int idTipoUsuario, bool insertarSeleccion) {
            return base.Channel.ObtenerHoldings(idTipoUsuario, insertarSeleccion);
        }
        
        public List<Compania> ObtenerCompañias(int idTipoUsuario, int idHolding, bool insertarSeleccion) {
            return base.Channel.ObtenerCompañias(idTipoUsuario, idHolding, insertarSeleccion);
        }
        
        public List<Direccion> ObtenerDirecciones(int idTipoUsuario, int idCompañia, bool insertarSeleccion) {
            return base.Channel.ObtenerDirecciones(idTipoUsuario, idCompañia, insertarSeleccion);
        }
        
        public List<SubDireccion> ObtenerSubDirecciones(int idTipoUsuario, int idDireccoin, bool insertarSeleccion) {
            return base.Channel.ObtenerSubDirecciones(idTipoUsuario, idDireccoin, insertarSeleccion);
        }
        
        public List<Gerencia> ObtenerGerencias(int idTipoUsuario, int idSubdireccion, bool insertarSeleccion) {
            return base.Channel.ObtenerGerencias(idTipoUsuario, idSubdireccion, insertarSeleccion);
        }
        
        public List<SubGerencia> ObtenerSubGerencias(int idTipoUsuario, int idGerencia, bool insertarSeleccion) {
            return base.Channel.ObtenerSubGerencias(idTipoUsuario, idGerencia, insertarSeleccion);
        }
        
        public List<Jefatura> ObtenerJefaturas(int idTipoUsuario, int idSubGerencia, bool insertarSeleccion) {
            return base.Channel.ObtenerJefaturas(idTipoUsuario, idSubGerencia, insertarSeleccion);
        }
        
        public Organizacion ObtenerOrganizacion(int idHolding, Nullable<int> idCompania, Nullable<int> idDireccion, Nullable<int> idSubDireccion, Nullable<int> idGerencia, Nullable<int> idSubGerencia, Nullable<int> idJefatura) {
            return base.Channel.ObtenerOrganizacion(idHolding, idCompania, idDireccion, idSubDireccion, idGerencia, idSubGerencia, idJefatura);
        }
        
        public void GuardarOrganizacion(Organizacion organizacion) {
            base.Channel.GuardarOrganizacion(organizacion);
        }
        
        public void GuardarHolding(Holding entidad) {
            base.Channel.GuardarHolding(entidad);
        }
        
        public void GuardarCompania(Compania entidad) {
            base.Channel.GuardarCompania(entidad);
        }
        
        public void GuardarDireccion(Direccion entidad) {
            base.Channel.GuardarDireccion(entidad);
        }
        
        public void GuardarSubDireccion(SubDireccion entidad) {
            base.Channel.GuardarSubDireccion(entidad);
        }
        
        public void GuardarGerencia(Gerencia entidad) {
            base.Channel.GuardarGerencia(entidad);
        }
        
        public void GuardarSubGerencia(SubGerencia entidad) {
            base.Channel.GuardarSubGerencia(entidad);
        }
        
        public void GuardarJefatura(Jefatura entidad) {
            base.Channel.GuardarJefatura(entidad);
        }
    }
}
